"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _flight_destinations = _interopRequireDefault(require("./shopping/flight_destinations"));
var _flight_offers = _interopRequireDefault(require("./shopping/flight_offers"));
var _flight_offers_search = _interopRequireDefault(require("./shopping/flight_offers_search"));
var _flight_dates = _interopRequireDefault(require("./shopping/flight_dates"));
var _seatmaps = _interopRequireDefault(require("./shopping/seatmaps"));
var _hotel_offer_search = _interopRequireDefault(require("./shopping/hotel_offer_search"));
var _hotel_offers_search = _interopRequireDefault(require("./shopping/hotel_offers_search"));
var _activities = _interopRequireDefault(require("./shopping/activities"));
var _activity = _interopRequireDefault(require("./shopping/activity"));
var _availability = _interopRequireDefault(require("./shopping/availability"));
var _transfer_offers = _interopRequireDefault(require("./shopping/transfer_offers"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { "default": e }; }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
/**
 * A namespaced client for the
 * `/v1/shopping`, `/v2/shopping` and `/v3/shopping` endpoints
 *
 * Access via the {@link Amadeus} object
 *
 * ```js
 * let amadeus = new Amadeus();
 * amadeus.shopping;
 * ```
 *
 * @param {Client} client
 * @property {FlightDestinations} flightDestinations
 * @property {FlightOffers} flightOffers
 * @property {FlightOffersSearch} flightOffersSearch
 * @property {FlightDates} flightDates
 * @property {Seatmaps} seatmaps
 * @property {HotelOfferSearch} hotelOffers
 * @property {HotelOffersSearch} hotelOffers
 * @property {Availability} availability
 * @property {TransferOffers} transferOffers
 */
var Shopping = /*#__PURE__*/function () {
  function Shopping(client) {
    _classCallCheck(this, Shopping);
    this.client = client;
    this.flightDestinations = new _flight_destinations["default"](client);
    this.flightOffers = new _flight_offers["default"](client);
    this.flightOffersSearch = new _flight_offers_search["default"](client);
    this.flightDates = new _flight_dates["default"](client);
    this.seatmaps = new _seatmaps["default"](client);
    this.hotelOffersSearch = new _hotel_offers_search["default"](client);
    this.activities = new _activities["default"](client);
    this.availability = new _availability["default"](client);
    this.transferOffers = new _transfer_offers["default"](client);
  }

  /**
   * Loads a namespaced path for a specific offer ID for Hotel Search V3
   *
   * @param  {string} [offerId]  The ID of the offer for a dedicated hotel
   * @return {HotelOfferSearch}
   **/
  return _createClass(Shopping, [{
    key: "hotelOfferSearch",
    value: function hotelOfferSearch(offerId) {
      return new _hotel_offer_search["default"](this.client, offerId);
    }

    /**
     * Loads a namespaced path for a specific activity ID
     *
     * @param  {string} [activityId]  The ID of the activity for a dedicated tour or activity
     * @return {Activity}
     **/
  }, {
    key: "activity",
    value: function activity(activityId) {
      return new _activity["default"](this.client, activityId);
    }
  }]);
}();
var _default = exports["default"] = Shopping;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,